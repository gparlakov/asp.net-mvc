@model Movies.ViewModels.MovieViewModels.EditMovieVM
<div>
    @using (Ajax.BeginForm("Edit", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "info-row-" + @Model.Id
    }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset class="form-horizontal">
            <legend>Movie</legend>

            <div class="control-group">
                @Html.LabelFor(model => model.Title, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.Title)
                    @Html.ValidationMessageFor(model => model.Title, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Year, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.Year)
                    @Html.ValidationMessageFor(model => model.Year, null, new { @class = "help-inline" })
                </div>
            </div>

            @if (Model.Actors != null)
            {
                <div class="control-group">
                    @Html.LabelFor(model => model.LeadingActorId, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(model => model.LeadingActorId,
                        Model.Actors.Select(a => new SelectListItem
                        {
                            Value = a.Id.ToString(),
                            Text = a.Name,
                            Selected = (a.Id == Model.SelectedActorId)
                        }), "None selected")
                    </div>
                </div>
            }

            @if (Model.Actresses != null)
            {
                <div class="control-group">
                    @Html.LabelFor(model => model.LeadingActressId, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(model => model.LeadingActressId,
                        Model.Actresses.Select(a => new SelectListItem
                        {
                            Value = a.Id.ToString(),
                            Text = a.Name,
                            Selected = (a.Id == Model.SelectedActressId)
                        }), "None selected")
                    </div>
                </div>
            }

            @if (Model.Directors != null)
            {
                <div class="control-group">
                    @Html.LabelFor(model => model.DirectorId, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(model => model.DirectorId,
                        Model.Directors.Select(a => new SelectListItem
                        {
                            Value = a.Id.ToString(),
                            Text = a.Name,
                            Selected = (a.Id == Model.DirectorId)
                        }), "None selected")
                    </div>
                </div>
            }

            <div class="form-actions no-color">
                <input type="submit" value="Edit" class="btn" />
            </div>
        </fieldset>
    }

    <div>
        <a class="close-details-button">Cancel</a>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

